name: Build & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        crate:
          - aqueducts/core
          - aqueducts/utils

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache target directory test
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}
            
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt

      - name: Test ${{ matrix.crate }}
        run: |
          cd ${{ matrix.crate }}
          cargo fmt -- --check
          cargo test

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        crate:
          - aqueducts/core
          - aqueducts/utils
          - aqueducts-cli

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache target directory release
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build ${{ matrix.crate }} in release mode
        run: |
          cd ${{ matrix.crate }}
          cargo build --release
